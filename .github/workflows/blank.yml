# name: Test and Deploy

# on:
#     push:
#         branches:
#             - main

# jobs:
#     test:
#         runs-on: ubuntu-latest

#         steps:
#             - name: Checkout Repository
#               uses: actions/checkout@v2

#             - name: Setup Node.js
#               uses: actions/setup-node@v2
#               with:
#                   node-version: "20"

#             - name: Install Dependencies
#               run: npm install

#             - name: Run Tests
#               run: npm test

#     deploy:
#         needs: test
#         runs-on: ubuntu-latest

#         steps:
#             - name: Checkout Repository
#               uses: actions/checkout@v2

#             - name: Setup Node.js
#               uses: actions/setup-node@v2
#               with:
#                   node-version: "20"

#             - name: Install Dependencies
#               run: npm install

#             - name: Build
#               run: npm run build

#             - name: Deploy to S3
#               uses: jakejarvis/s3-sync-action@v0.6.0
#               with:
#                   args: --acl public-read --delete
#               env:
#                   AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
#                   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#                   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#                   SOURCE_DIR: "build"

# workflow 이름
name: S3-CICD

# 실행될 이벤트 등록
on:
    push:
        branches:
            - main
    # 수동으로 실행
    workflow_dispatch:

# 실행될 작업 목록
jobs:
    # 작업 이름
    cicd:
        # 작업을 실행해 줄 서버
        runs-on: ubuntu-latest
        # 실행 단계
        steps:
            # 해당 스텝의 이름과 과정
            - name: "checkout branch"
              uses: actions/checkout@v3
              with:
                  ref: main
            - name: "run clean install"
              run: npm ci
            - name: "run test"
              run: npm test
            - name: "run build"
              run: npm run build
            - name: "deploy to s3"
              uses: jakejarvis/s3-sync-action@master
              with:
                  args: --delete
              env:
                  AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  AWS_REGION: "ap-northeast-2"
                  SOURCE_DIR: "build"
            - name: Deploy if tests pass
              if: ${{ failure() != true }}
              run: |
                  # Deploying code if tests pass
                  # Add your deployment steps here
