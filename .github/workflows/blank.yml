# workflow 이름
name: S3-CICD

# 워크플로우를 실행할 이벤트를 지정합니다.
on:
    push:
        branches:
            - main

# 실행될 작업 목록
# 각 작업은 병렬로 진행가능
jobs:
    # 작업 이름
    test:
        runs-on: ubuntu-latest
        steps:
            - name: "checkout branch"
              uses: actions/checkout@v3
              with:
                  ref: main
            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20.5"
            - name: "run clean install"
              run: npm ci
            - name: "run test"
              run: npm test
            - name: "test check"
              if: failure()
              run: echo "테스트가 실패했습니다."

    deploy:
        # 작업을 실행해 줄 서버
        runs-on: ubuntu-latest

        # 특정 작업이 성공한다면 작업진행
        needs: test

        # 작업 내에서 실행될 단계들을 정의, 각 단계는 순차적으로 진행
        steps:
            # 해당 스텝의 코멘트
            - name: "checkout branch"

              # 사용할 작업(action)을 지정합니다.
              # 외부 리포지토리의 액션을 사용하거나, GitHub이 제공하는 기본 액션을 사용가능
              uses: actions/checkout@v3
              # 사용할 액션의 옵션을 지정합니다.
              with:
                  ref: main
            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20.5"

            - name: "run build"
              # 쉘 명령 또는 스크립트를 실행
              run: npm run build
            - name: "deploy to s3"
              uses: jakejarvis/s3-sync-action@master
              with:
                  args: --acl public-read --delete
              env:
                  AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  AWS_REGION: "ap-northeast-2"
                  SOURCE_DIR: "dist"
